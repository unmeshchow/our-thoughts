# ==============================================================
# = Internationalization
# ==============================================================
spring.messages.basename=messages/messages

# ==============================================================
# = Logging
# ==============================================================
logging.level.com.unmeshc.ourthoughts=debug
#logging.level.web=debug

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
spring.queries.users-query=select email, password, active from users where email=?
spring.queries.roles-query=select u.email, r.name from users u inner join users_roles ur on(u.id=ur.user_id) inner join roles r on(r.id=ur.role_id) where u.email=?

# ==============================================================
# = Show queries
# ==============================================================
spring.jpa.show-sql=true

# ==============================================================
# = Remember me
# ==============================================================
secret.and.unique=Bangladesh

# ==============================================================
# = JavaMail Configuration
# ==============================================================
spring.mail.host=smtp.gmail.com
spring.mail.port=587
#spring.mail.port=578
spring.mail.username=javaunmeshapp@gmail.com
spring.mail.password=java_unmesh_app
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com

# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle=true
#spring.datasource.validationQuery=SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update

# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect